@startuml ER图

' 定义实体，使用矩形表示
entity "用户" as User {
    * 用户ID (PK)
    姓名
    联系方式
    注册时间
    账户信息
}

entity "维修人员" as Repairman {
    * 维修人员ID (PK)
    用户ID (FK) -->> User.用户ID
    * 工种ID (FK) -->> 工种.工种ID
    时薪
}

entity "工种" as JobType {
    * 工种ID (PK)
    工种名称 （如漆工、焊工、机修等）
}

entity "车辆" as Vehicle {
    * 车辆ID (PK)
    用户ID (FK) -->> User.用户ID
    车型
    车牌号
    发动机号
    购买时间
}

entity "维修工单" as WorkOrder {
    * 工单ID (PK)
    车辆ID (FK) -->> Vehicle.车辆ID
    用户ID (FK) -->> User.用户ID
    工单状态 （待分配/进行中/已完成/已拒绝等）
    故障描述
    创建时间
    完成时间
    总费用 （工时费+材料费）
    反馈评分 （1-5分）
    反馈内容
}

entity "材料" as Material {
    * 材料ID (PK)
    材料名称
    材料价格
    库存数量
}

' 定义关系，使用菱形表示关联关系
' 用户-车辆：1对多（一个用户拥有多辆车）
User ||--o{ Vehicle : "拥有"

' 用户-工单：1对多（一个用户提交多个工单）
User ||--o{ WorkOrder : "提交"

' 车辆-工单：1对多（一辆车对应多个维修工单）
Vehicle ||--o{ WorkOrder : "关联"

' 维修人员-工种：1对1（每个维修人员只有一种工种）
Repairman ||--|| JobType : "属于"

' 工单-维修人员：多对多（一个工单可分配给多个维修人员，一个维修人员可接多个工单）
WorkOrder }o--o{ Repairman : "分配"
' 中间表（工单分配记录）隐含在关系中，需包含接单时间、拒绝原因等属性

' 工单-材料：多对多（一个工单消耗多种材料，一种材料可用于多个工单）
WorkOrder }o--o{ Material : "消耗"
' 中间表（材料消耗记录）需包含消耗数量、消耗时间等属性

' 补充外键关系

' 标注基数（1对多示例：用户-车辆）
User "1" -- "*" Vehicle
User "1" -- "*" WorkOrder
Vehicle "1" -- "*" WorkOrder
Repairman "1" -- "1" JobType
WorkOrder "*" -- "*" Repairman
WorkOrder "*" -- "*" Material

@enduml